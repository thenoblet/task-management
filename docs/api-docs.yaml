openapi: 3.1.0
info:
  title: Task Management API
  description: API for managing tasks with CRUD operations
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: v1.0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Task Controller
  description: Operations for managing tasks
paths:
  /api/v1/tasks/{id}:
    get:
      tags:
      - Task Controller
      summary: Get task by ID
      description: Retrieves a specific task by its unique identifier
      operationId: getTaskById
      parameters:
      - name: id
        in: path
        description: UUID of the task to retrieve
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Task found and returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "404":
          description: Task not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskResponse"
    put:
      tags:
      - Task Controller
      summary: Update an entire task
      description: Replaces all fields of an existing task
      operationId: updateTask
      parameters:
      - name: id
        in: path
        description: UUID of the task to update
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Updated task object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRequest"
        required: true
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "400":
          description: Invalid input provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "404":
          description: Task not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskResponse"
    delete:
      tags:
      - Task Controller
      summary: Delete a task
      description: Removes a task from the system
      operationId: deleteTask
      parameters:
      - name: id
        in: path
        description: UUID of the task to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: Task deleted successfully
        "404":
          description: Task not found
    patch:
      tags:
      - Task Controller
      summary: Partially update a task
      description: Updates specific fields of an existing task
      operationId: patchTask
      parameters:
      - name: id
        in: path
        description: UUID of the task to update
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Fields to update (only provided fields will be changed)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskUpdateRequest"
        required: true
      responses:
        "200":
          description: Task partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "400":
          description: Invalid input provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "404":
          description: Task not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskResponse"
  /api/v1/tasks:
    get:
      tags:
      - Task Controller
      summary: Get all tasks
      description: Retrieves a list of all tasks in the system
      operationId: getAllTasks
      responses:
        "200":
          description: Successfully retrieved all tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskResponse"
    post:
      tags:
      - Task Controller
      summary: Create a new task
      description: Adds a new task to the system
      operationId: createTask
      requestBody:
        description: Task object that needs to be created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRequest"
        required: true
      responses:
        "201":
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
        "400":
          description: Invalid input provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskResponse"
  /api/v1/tasks/status/{status}:
    get:
      tags:
      - Task Controller
      summary: Filter tasks by status
      description: Retrieves tasks matching the specified status
      operationId: getTasksByStatus
      parameters:
      - name: status
        in: path
        description: "Status to filter by (PENDING, COMPLETED, FAILED, IN_PROGRESS)"
        required: true
        schema:
          type: string
          enum:
          - PENDING
          - COMPLETED
          - FAILED
          - IN_PROGRESS
      responses:
        "200":
          description: Tasks filtered by status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskResponse"
  /api/v1/tasks/priority/{priority}:
    get:
      tags:
      - Task Controller
      summary: Filter tasks by priority
      description: Retrieves tasks matching the specified priority level
      operationId: getTasksByPriority
      parameters:
      - name: priority
        in: path
        description: Priority level to filter by
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Tasks filtered by priority
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskResponse"
components:
  schemas:
    TaskResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        priority:
          type: string
        status:
          type: string
        dueDate:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    TaskRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
          minLength: 3
        description:
          type: string
          maxLength: 500
          minLength: 0
        priority:
          type: string
        status:
          type: string
        dueDate:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
            maxLength: 20
            minLength: 0
      required:
      - priority
      - title
    TaskUpdateRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        priority:
          type: string
        status:
          type: string
        dueDate:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
